{"version":3,"sources":["US_mass_shootings.csv","BarStates.js","BarChart.js","MapChart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","grouped_values","React","require","d3","BarChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","anchorRef","createRef","creatBrush","bind","assertThisInitialized","createAxis","margin","width","w","height","h","timeParse","scale","scaleTime","range","domain","extent","data","d","Date","brush","brushX","on","selectedExtent","event","selection","map","invert","brushFn","undefined","node","select","childNodes","selectAll","enter","append","attr","changeBrush","xScale","yScale","scaleLinear","max","Killed","xAxis","axisBottom","ticks","tickSizeOuter","yAxis","axisLeft","tickSize","months","current","remove","text","getMonth","getFullYear","lower","_this2","killedState","Injured","refs","bar","raise","rects","i","createElement","key","x","y","style","fill","opacity","stroke","hoverElement","strokeWidth","onMouseOver","onHover","onMouseOut","className","ref","transform","Component","MapChart","state","us_states","csv","then","json","setState","catch","error","console","log","_this3","circleScale","scaleSqrt","projection","geoAlbersUsa","translate","path","geoPath","objects","states","topojson","features","forEach","coords","Longitude","Latitude","states_map","MapChart_React","circles","r","cx","cy","id","State","onMouseEnter","BarStates","scaleBand","nest","rollup","v","sum","entries","grouped_values_sorted","sort","a","b","value","rectStates","BarStates_React","bandwidth","App","screenWidth","window","innerWidth","screenHeight","onResize","onBrush","killedClick","injuredClick","hover","killedData","injuredData","addEventListener","date_array","parseTime","Year","push","maxDate","Math","apply","minDate","min","brushExtent","filterData","filter","App_React","onClick","src_MapChart","injuredState","src_BarChart","src_BarStates","Boolean","location","hostname","match","ReactDOM","render","react_default","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2n8mBAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wKCGpCC,oFCHAC,SAAQC,EAAQ,IAChBC,EAAKD,EAAQ,GAkMFE,cA7Lb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKRQ,UAAYZ,EAAMa,YAJhBR,EAAKS,WAAaT,EAAKS,WAAWC,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAClBA,EAAKY,WAAaZ,EAAKY,WAAWF,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAHDA,oFAUjBG,KAAKS,aACLT,KAAKM,0DAILN,KAAKS,aACLT,KAAKM,kDAKL,IAAII,EACK,GADLA,EAEI,GAFJA,EAGG,GAHHA,EAIM,GAGNC,EAAQX,KAAKJ,MAAMgB,EAAIF,EAAeA,EACtCG,EAASb,KAAKJ,MAAMkB,EAAIJ,EAAaA,EAEzChB,EAAGqB,UAAU,YAEb,IAAMC,EAAQtB,EAAGuB,YAAYC,MAAM,CAAC,EAAEP,IAEtCK,EAAMG,OAAOzB,EAAG0B,OAAOpB,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEC,QAE/C,IAAMC,EAAQ9B,EAAG+B,SACdL,OAAO,CAAC,CAAC,EAAE,GAAI,CAACT,EAAOE,KACvBa,GAAG,QAoBJ,WACE,IACMC,EADWjC,EAAGkC,MAAMC,UACMC,IAAId,EAAMe,OAAQf,GAClDgB,EAAQL,UArBQM,IAAdjC,KAAKkC,OAEVxC,EAAGyC,OAAOnC,KAAKkC,KAAKE,WAAW,IAC3BC,UAAU,WACVhB,KAAK,CAAC,IACNiB,QACAC,OAAO,KACPC,KAAK,QAAS,SAEjB9C,EAAGyC,OAAOnC,KAAKkC,KAAKE,WAAW,IAC5BD,OAAO,WACPK,KAAK,SAAU,aACfrC,KAAKqB,IAIV,IAAIQ,EAAUhC,KAAKJ,MAAM6C,iDAYzB,IAAM/B,EACG,GADHA,EAEE,GAFFA,EAGC,GAHDA,EAII,GAGJC,EAAQX,KAAKJ,MAAMgB,EAAIF,EAAeA,EACtCG,EAASb,KAAKJ,MAAMkB,EAAIJ,EAAaA,EAErCgC,EAAShD,EAAGuB,YACbC,MAAM,CAAC,EAAGP,IAETgC,EAASjD,EAAGkD,cACf1B,MAAM,CAACL,EAAQ,IAEjB6B,EAAOvB,OAAOzB,EAAG0B,OAAOpB,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEC,QACjDoB,EAAOxB,OAAO,CAAC,EAAGzB,EAAGmD,IAAI7C,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEwB,WAEjD,IAAMC,EAAQrD,EAAGsD,aACdhC,MAAM0B,GACNO,MAAM,GACNC,cAAc,GAEVC,EAAQzD,EAAG0D,WACPpC,MAAM2B,GACNU,UAAU1C,EAAM,EAAE,GAClBuC,cAAc,GAEnBI,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAKjE,OAA3BtD,KAAKI,UAAUmD,UACjB7D,EAAGyC,OAAO,gBAAgBqB,SAC1B9D,EAAGyC,OAAO,gBAAgBqB,SAEzB9D,EAAGyC,OAAOnC,KAAKI,UAAUmD,SACvBhB,OAAO,KACPC,KAAK,YAAa,eAAiB3B,EAAS,KAC5C2B,KAAK,QAAS,eACdrC,KAAK4C,GACLV,UAAU,QACRoB,KAAK,SAASnC,GACX,OAAOgC,EAAOhC,EAAEoC,YAAc,MAAQpC,EAAEqC,cAAgB,OAGhEjE,EAAGyC,OAAOnC,KAAKI,UAAUmD,SACvBhB,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,kBAClBrC,KAAKgD,GACLS,0CAMK,IAAAC,EAAA7D,KAEHU,EACK,GADLA,EAEI,GAFJA,EAGG,GAHHA,EAIM,GAGNC,EAAQX,KAAKJ,MAAMgB,EAAIF,EAAeA,EACtCG,EAASb,KAAKJ,MAAMkB,EAAIJ,EAAaA,EAEnCgC,EAAShD,EAAGuB,YACbC,MAAM,CAAC,EAAGP,IAETgC,EAASjD,EAAGkD,cACf1B,MAAM,CAACL,EAAQ,IAElB6B,EAAOvB,OAAOzB,EAAG0B,OAAOpB,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEC,SAEjB,IAA3BvB,KAAKJ,MAAMkE,YACbnB,EAAOxB,OAAO,CAAC,EAAGzB,EAAGmD,IAAI7C,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEwB,WAGjDH,EAAOxB,OAAO,CAAC,EAAGzB,EAAGmD,IAAI7C,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEyC,YAGnDrE,EAAGyC,OAAOnC,KAAKgE,KAAKC,KAAKC,QAEzB,IAAMC,EAAQnE,KAAKJ,MAAMyB,KAAKS,IAAI,SAACR,EAAG8C,GAAJ,OAChC5E,EAAA6E,cAAA,QAAMC,IAAK,OAAQF,EACjBG,EAAK7B,EAAOpB,EAAEC,MACdiD,GAAiC,IAA3BX,EAAKjE,MAAMkE,YAAuBnB,EAAOrB,EAAEwB,QAAUH,EAAOrB,EAAEyC,SACpEpD,MAAU,EACVE,QAAsC,IAA3BgD,EAAKjE,MAAMkE,YAAuBjD,EAAS8B,EAAOrB,EAAEwB,QAAUjC,EAAS8B,EAAOrB,EAAEyC,SAC3FU,MAAO,CAACC,MAAiC,IAA3Bb,EAAKjE,MAAMkE,YAAuB,UAAY,aAC1Da,QAASd,EAAKjE,MAAMwB,OAAO,IAAME,EAAEC,MAAQsC,EAAKjE,MAAMwB,OAAO,IAAME,EAAEC,KAAO,EAAG,EAC/EqD,OAAQf,EAAKjE,MAAMiF,eAAiBvD,EAAEC,KAAO,QAAU,OACvDuD,YAAajB,EAAKjE,MAAMiF,eAAiBvD,EAAEC,KAAO,EAAI,GAExDwD,YAAgB,WAAQlB,EAAKjE,MAAMoF,QAAQ1D,EAAEC,OAC7C0D,WAAe,WAAQpB,EAAKjE,MAAMoF,aAAQ/C,IAC1CiD,UAAa,aACbC,IAAOtB,EAAKjE,MAAMiF,eAAiBvD,EAAEC,KAAO,SAAW,UAM3D,OACE/B,EAAA6E,cAAA,OAAKc,IAAQ,SAAAjD,GAAI,OAAI2B,EAAK3B,KAAOA,GAAQvB,MAASX,KAAKJ,MAAMgB,EAAGC,OAAUb,KAAKJ,MAAMkB,GACrFtB,EAAA6E,cAAA,KAAGc,IAAOnF,KAAKI,UAAWgF,UAAW,aAAe1E,EAAc,IAAMA,EAAa,KACnFyD,WAvLe3E,EAAM6F,2BCAzB7F,EAAQC,EAAQ,GAChBC,EAAKD,EAAQ,GAmHF6F,6MA9GbC,MAAQ,CACNC,UAAW,wFAGQ,IAAA3B,EAAA7D,KAEnBN,EAAG+F,IAAI,aACNC,KAAK,SAACC,GACL9B,EAAK+B,SAAS,CACZJ,gBAGHK,MAAM,SAAAC,GACPC,QAAQC,IAAIF,sCAeL,IAAAG,EAAAjG,KAEFU,EACI,GADJA,EAEG,GAFHA,EAGE,GAHFA,EAIK,GAGHC,EAAQX,KAAKJ,MAAMgB,EAAIF,EAAeA,EACvCG,EAASb,KAAKJ,MAAMkB,EAAIJ,EAAaA,EAGvCwF,EAAcxG,EAAGyG,YACpBjF,MAAM,CAAC,EAAE,IAENkF,EAAa1G,EAAG2G,eACnBC,UAAU,CAAC3F,EAAQ,EAAGE,EAAS,IAC/BG,MAAM,MAEwB,IAA3BhB,KAAKJ,MAAMkE,YACboC,EAAY/E,OAAOzB,EAAG0B,OAAOpB,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEwB,UAGrDoD,EAAY/E,OAAOzB,EAAG0B,OAAOpB,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEyC,WAIzD,IAAMwC,EAAO7G,EAAG8G,UACbJ,WAAWA,GAEJZ,EAAcxF,KAAKuF,MAAnBC,UAER,QAAyBvD,IAAtBuD,EAAUiB,QACX,OAAO,KAGT,IAAMC,EAASC,IAAiBnB,EAAWA,EAAUiB,QAAQC,QAAQE,SAErE5G,KAAKJ,MAAMyB,KAAKwF,QAAQ,SAACvF,GACvBA,EAAEwF,OAASV,EAAW,CAAC9E,EAAEyF,UAAWzF,EAAE0F,aAIxC,IAAMC,EAAaP,EAAO5E,IAAI,SAACR,EAAE8C,GAAH,OAAS8C,EAAA7C,cAAA,QACrCC,IAAQ,OAASF,EACjB9C,EAAMiF,EAAKjF,GACX4D,UAAc,QACdT,MAAS,CAAEC,KAAM,iBAIbyC,EAAUnH,KAAKJ,MAAMyB,KAAKS,IAAI,SAACR,EAAE8C,GAAH,OAAS8C,EAAA7C,cAAA,UAC3CC,IAAO,SAAWF,EAClBgD,GAAiC,IAA3BnB,EAAKrG,MAAMkE,YAAuBoC,EAAY5E,EAAEwB,QAAUoD,EAAY5E,EAAEyC,SAC9EsD,GAAO/F,EAAEwF,OAAO,GAChBQ,GAAOhG,EAAEwF,OAAO,GAChBS,GAAOjG,EAAEkG,MACTC,aAAiB,WAAQxB,EAAKrG,MAAMoF,QAAQ1D,EAAEC,OAC9C0D,WAAe,WAAQgB,EAAKrG,MAAMoF,aAAQ/C,IAC1CwC,MAAO,CACLC,MAAiC,IAA3BuB,EAAKrG,MAAMkE,YAAuB,UAAY,aACpDc,OAAQqB,EAAKrG,MAAMiF,eAAiBvD,EAAEC,KAAO,QAAU,OACvDuD,YAAamB,EAAKrG,MAAMiF,eAAiBvD,EAAEC,KAAO,EAAI,OAK1D,OACE2F,EAAA7C,cAAA,OAAK1D,MAASX,KAAKJ,MAAMgB,EAAGC,OAAUb,KAAKJ,MAAMkB,GACjDoG,EAAA7C,cAAA,KAAGe,UAAW,aAAe1E,EAAc,IAAMA,EAAa,KAC5DuG,EACAE,WAtGe3H,EAAM6F,4BFPzB7F,EAAQC,EAAQ,GAChBC,EAAKD,EAAQ,GAgFFiI,6MA3EbtH,UAAYZ,EAAMa,oFAET,IAAAwD,EAAA7D,KAEDU,EACG,GADHA,EAEE,GAFFA,EAGC,GAHDA,EAII,GAGJC,EAAQX,KAAKJ,MAAMgB,EAAIF,EAAeA,EACtCG,EAASb,KAAKJ,MAAMkB,EAAIJ,EAAaA,EAErCgC,EAAShD,EAAGkD,cACb1B,MAAM,CAAC,EAAGP,IAETgC,EAASjD,EAAGiI,YACfzG,MAAM,CAACL,EAAQ,IAGjB8B,EAAOxB,OAAOnB,KAAKJ,MAAMyB,KAAKS,IAAI,SAAAR,GAAC,OAAIA,EAAEkG,UAGV,IAA3BxH,KAAKJ,MAAMkE,aACZvE,EAAiBG,EAAGkI,OAChBtD,IAAI,SAAAhD,GAAC,OAAIA,EAAEkG,QACXK,OAAO,SAAAC,GAAC,OAAIpI,EAAGqI,IAAID,EAAG,SAAAxG,GAAC,OAAIA,EAAEwB,WAC7BkF,QAAQhI,KAAKJ,MAAMyB,MAEvBqB,EAAOvB,OAAO,CAAC,EAAGzB,EAAGmD,IAAI7C,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEwB,aAGnDvD,EAAiBG,EAAGkI,OAChBtD,IAAI,SAAAhD,GAAC,OAAIA,EAAEkG,QACXK,OAAO,SAAAC,GAAC,OAAIpI,EAAGqI,IAAID,EAAG,SAAAxG,GAAC,OAAIA,EAAEyC,YAC7BiE,QAAQhI,KAAKJ,MAAMyB,MAEvBqB,EAAOvB,OAAO,CAAC,EAAGzB,EAAGmD,IAAI7C,KAAKJ,MAAMyB,KAAM,SAAAC,GAAC,OAAIA,EAAEyC,aAGnD,IAAIkE,EAAwB1I,EAAe2I,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAQD,EAAEC,QAGhElF,EAAQzD,EAAG0D,WACdpC,MAAM2B,GACNO,cAAc,GAEhBxD,EAAGyC,OAAOnC,KAAKI,UAAUmD,SACvBf,KAAK,QAAS,iBACdA,KAAK,YAAa,iBAAmB9B,EAAY,KACjDP,KAAKgD,GAEP,IAAMmF,EAAaL,EAAsBnG,IAAI,SAACR,EAAE8C,GAAH,OAC1CmE,EAAAlE,cAAA,QACAC,IAAO,aAAeF,EACtBG,EAAK,EACLC,EAAM7B,EAAOrB,EAAEgD,KACfzD,OAAW8B,EAAO6F,YAAa,EAC/B7H,MAAU+B,EAAOpB,EAAE+G,OACnB5D,MAAS,CAACC,MAAiC,IAA3Bb,EAAKjE,MAAMkE,YAAuB,UAAY,kBAGlE,OACEyE,EAAAlE,cAAA,OAAK1D,MAASX,KAAKJ,MAAMgB,EAAGC,OAAUb,KAAKJ,MAAMkB,GACjDyH,EAAAlE,cAAA,KAAGc,IAAOnF,KAAKI,UAAWgF,UAAW,aAAe1E,EAAc,QAC9D4H,WAnEc9I,EAAM6F,WGA1B7F,EAAQC,EAAQ,GAChBC,EAAKD,EAAQ,GA4IFgJ,cArIb,SAAAA,EAAY7I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IACjB5I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2I,GAAAtI,KAAAH,KAAMJ,KASNQ,UAAYZ,EAAMa,YAVDR,EA2BlB0F,MAAQ,CACPlE,KAAM,GACNqH,YAAaC,OAAOC,WACpBC,aAAc,KA5BdhJ,EAAKiJ,SAAWjJ,EAAKiJ,SAASvI,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAKmF,QAAUnF,EAAKmF,QAAQzE,KAAbT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACfA,EAAKkJ,QAAUlJ,EAAKkJ,QAAQxI,KAAbT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACfA,EAAKmJ,YAAcnJ,EAAKmJ,YAAYzI,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAKoJ,aAAepJ,EAAKoJ,aAAa1I,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK+B,MAAQ,CAAEsH,MAAO,QAPLrJ,6EAcjBG,KAAK4F,SAAS,CACZuD,YAAY,EACZC,aAAa,2CAKfpJ,KAAK4F,SAAS,CACZuD,YAAY,EACZC,aAAa,oCAUT9H,GACNtB,KAAK4F,SAAS,CACZsD,MAAO5H,iDAIU,IAAAuC,EAAA7D,KACnB2I,OAAOU,iBAAiB,SAAUrJ,KAAK8I,UAAU,GAEjDpJ,EAAG+F,IAAIpE,KACJqE,KAAK,SAAArE,GACJ,IAAMiI,EAAa,GACbC,EAAY7J,EAAGqB,UAAU,YAE/BM,EAAKwF,QAAQ,SAACvF,GACZA,EAAEC,KAAOgI,EAAUjI,EAAEC,MACrBD,EAAEkI,MAAQlI,EAAEkI,KACZlI,EAAE0F,UAAY1F,EAAE0F,SAChB1F,EAAEyF,WAAazF,EAAEyF,UACjBzF,EAAEwB,QAAUxB,EAAEwB,OACdxB,EAAEyC,SAAWzC,EAAEyC,QAEfuF,EAAWG,KAAKnI,EAAEC,QAGrB,IAAImI,EAAU,IAAInI,KAAKoI,KAAK9G,IAAI+G,MAAM,KAAKN,IACvCO,EAAU,IAAItI,KAAKoI,KAAKG,IAAIF,MAAM,KAAKN,IAG1CzF,EAAK+B,SAAS,CACZvE,OACA0I,YAAa,CAACF,EAAQH,GACtBP,YAAY,EACZC,aAAa,yCAUnBpJ,KAAK4F,SAAS,CACZ8C,YAAaC,OAAOC,WACpBC,aAAc,sCAIVvH,GACNtB,KAAK4F,SAAS,CACZmE,YAAazI,qCAIR,IAAA2E,EAAAjG,KACCqB,EAASrB,KAAKuF,MAAdlE,KAERA,EAAK6G,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErF,OAASsF,EAAEtF,SAEjCpD,EAAGyC,OAAO,iBACPsC,MAAM,mBAAoB,WACzB,OAA8B,IAA1BwB,EAAKV,MAAM4D,WAA4B,UACpC,cAER1E,MAAM,QAAS,WACd,OAA8B,IAA1BwB,EAAKV,MAAM4D,WAA4B,QACpC,UAGXzJ,EAAGyC,OAAO,kBACPsC,MAAM,mBAAoB,WACzB,OAA+B,IAA3BwB,EAAKV,MAAM6D,YAA6B,aACrC,cAER3E,MAAM,QAAS,WACd,OAA+B,IAA3BwB,EAAKV,MAAM6D,YAA6B,QACrC,UAKX,IAAMY,EAAa3I,EAAK4I,OAAO,SAAC3I,EAAE8C,GAAH,OAAS6B,EAAKV,MAAMwE,YAAY,IAAMzI,EAAEC,MAAQD,EAAEC,MAAQ0E,EAAKV,MAAMwE,YAAY,KAEhH,OACEG,EAAA7F,cAAA,OAAKa,UAAU,OACfgF,EAAA7F,cAAA,MAAIa,UAAY,SAAhB,wCACAgF,EAAA7F,cAAA,OAAKkD,GAAK,kBACV2C,EAAA7F,cAAA,UAAQa,UAAY,eAAeiF,QAAUnK,KAAKgJ,aAAlD,YACAkB,EAAA7F,cAAA,UAAQa,UAAY,gBAAgBiF,QAAUnK,KAAKiJ,cAAnD,cAEAiB,EAAA7F,cAAC+F,EAAD,CAAUC,aAAgBrK,KAAKuF,MAAM6D,YAAatF,YAAe9D,KAAKuF,MAAM4D,WAAYtE,aAAc7E,KAAKuF,MAAM2D,MAAOlE,QAAYhF,KAAKgF,QAAUpE,EAAKZ,KAAKuF,MAAMmD,YAAc5H,EAAGd,KAAKuF,MAAMsD,aAAcxH,KAAS2I,IACtNE,EAAA7F,cAACiG,EAAD,CAAUD,aAAgBrK,KAAKuF,MAAM6D,YAAatF,YAAe9D,KAAKuF,MAAM4D,WAAY/H,OAASpB,KAAKuF,MAAMwE,YAAatH,YAAezC,KAAK+I,QAASlE,aAAc7E,KAAKuF,MAAM2D,MAAOlE,QAAWhF,KAAKgF,QAAUpE,EAAIZ,KAAKuF,MAAMmD,YAAc,IAAM5H,EAAGd,KAAKuF,MAAMsD,aAAcxH,KAASA,IACxR6I,EAAA7F,cAACkG,EAAD,CAAWF,aAAgBrK,KAAKuF,MAAM6D,YAAatF,YAAe9D,KAAKuF,MAAM4D,WAAYnE,QAAYhF,KAAKgF,QAAUpE,EAAKZ,KAAKuF,MAAMmD,YAAc,IAAK5H,EAAKd,KAAKuF,MAAMsD,aAAcxH,KAAQ2I,YAhIjLxK,EAAM6F,WCCJmF,QACW,cAA7B7B,OAAO8B,SAASC,UAEe,UAA7B/B,OAAO8B,SAASC,UAEhB/B,OAAO8B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOC,EAAA3C,EAAA9D,cAAC0G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1F,KAAK,SAAA2F,GACjCA,EAAaC","file":"static/js/main.a03328ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/US_mass_shootings.cb2f4660.csv\";","var React = require(\"react\")\nvar d3 = require(\"d3\")\n\nlet grouped_values;\n\nclass BarStates extends React.Component {\n  anchorRef = React.createRef()\n\n  render() {\n\n    const margin = {\n      right: 40,\n      left: 40,\n      top: 40,\n      bottom: 40\n    }\n\n    const width = this.props.w - margin.right - margin.left;\n    const height = this.props.h - margin.top - margin.bottom;\n\n    const xScale = d3.scaleLinear()\n        .range([0, width])\n\n    const yScale = d3.scaleBand()\n      .range([height, 0])\n\n\n     yScale.domain(this.props.data.map(d => d.State ))\n\n\n     if (this.props.killedState === true) {\n        grouped_values = d3.nest()\n           .key(d => d.State)\n           .rollup(v => d3.sum(v, d => d.Killed))\n           .entries(this.props.data)\n\n        xScale.domain([0, d3.max(this.props.data, d => d.Killed)])\n     }\n     else {\n      grouped_values = d3.nest()\n         .key(d => d.State)\n         .rollup(v => d3.sum(v, d => d.Injured))\n         .entries(this.props.data)\n\n      xScale.domain([0, d3.max(this.props.data, d => d.Injured)])\n     }\n\n    var grouped_values_sorted = grouped_values.sort((a, b) => a.value - b.value);\n\n\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .tickSizeOuter(0)\n\n     d3.select(this.anchorRef.current)\n      .attr(\"class\", \"axis_y_states\")\n      .attr(\"transform\", \"translate(100,\" + margin.top +\")\")\n      .call(yAxis)\n\n     const rectStates = grouped_values_sorted.map((d,i) =>\n        <rect\n        key = {\"rectStates\" + i}\n        x = {0}\n        y = { yScale(d.key) }\n        height = { yScale.bandwidth() -1 }\n        width = { xScale(d.value) }\n        style = {{fill: this.props.killedState === true ? \"darkred\" : \"darkorange\",}}\n     />)\n\n    return (\n      <svg width = {this.props.w} height = {this.props.h} >\n      <g ref = {this.anchorRef} transform={\"translate(\" + margin.left + \",\" + 40 + \")\"}>\n        { rectStates }\n      </g>\n      </svg>\n\n     )\n\n  }\n}\n\nexport default BarStates","var React = require(\"react\")\nvar d3 = require(\"d3\")\n\nclass BarChart extends React.Component{\n\n\n  constructor(props) {\n    super(props)\n    this.creatBrush = this.creatBrush.bind(this)\n    this.createAxis = this.createAxis.bind(this)\n  }\n\n  anchorRef = React.createRef()\n\n  componentWillMount() {\n    // let node = this.refs.player\n    this.createAxis()\n    this.creatBrush()\n  }\n\n  componentDidUpdate() {\n    this.createAxis()\n    this.creatBrush()\n  }\n\n  creatBrush() {\n\n    let margin = {\n      right: 40,\n      left: 40,\n      top: 40,\n      bottom: 40\n    }\n\n    let width = this.props.w - margin.right - margin.left;\n    let height = this.props.h - margin.top - margin.bottom;\n\n    d3.timeParse(\"%d-%b-%y\")\n\n    const scale = d3.scaleTime().range([0,width])\n\n    scale.domain(d3.extent(this.props.data, d => d.Date))\n\n    const brush = d3.brushX()\n      .extent([[0,0], [width, height]])\n      .on(\"brush\", brushed)\n\n      if (this.node !== undefined) {\n\n     d3.select(this.node.childNodes[0])\n        .selectAll(\"g.brush\")\n        .data([0])\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"brush\")\n\n      d3.select(this.node.childNodes[0])\n        .select(\"g.brush\")\n        .attr(\"cursor\", \"ew-resize\")\n        .call(brush)\n\n      }\n\n    let brushFn = this.props.changeBrush\n\n      function brushed() {\n        const selected = d3.event.selection;\n        const selectedExtent = selected.map(scale.invert, scale)\n        brushFn(selectedExtent)\n\n      }\n\n  }\n\n  createAxis() {\n    const margin = {\n      right: 40,\n      left: 40,\n      top: 40,\n      bottom: 40\n    }\n\n    const width = this.props.w - margin.right - margin.left;\n    const height = this.props.h - margin.top - margin.bottom;\n\n    const xScale = d3.scaleTime()\n        .range([0, width])\n\n    const yScale = d3.scaleLinear()\n      .range([height, 0])\n\n     xScale.domain(d3.extent(this.props.data, d => d.Date ))\n    yScale.domain([0, d3.max(this.props.data, d => d.Killed)])\n\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(9)\n      .tickSizeOuter(0)\n\n     const yAxis = d3.axisLeft()\n              .scale(yScale)\n              .tickSize(-width,0,0)\n              .tickSizeOuter(0)\n\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n\n\n\n  if (this.anchorRef.current !== null) {\n    d3.select(\".axis_y_bars\").remove()\n    d3.select(\".axis_x_bars\").remove()\n\n     d3.select(this.anchorRef.current)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .attr(\"class\", \"axis_x_bars\")\n      .call(xAxis)\n      .selectAll(\"text\")\n        .text(function(d){\n            return months[d.getMonth()] + \" '\" + (d.getFullYear() - 2000);\n        })\n\n    d3.select(this.anchorRef.current)\n     .append(\"g\")\n     .attr(\"class\", \"axis_y_bars\")\n     .attr(\"transform\", \"translate(0,0)\")\n     .call(yAxis)\n     .lower()\n  }\n\n\n  }\n\n  render() {\n\n    let margin = {\n      right: 40,\n      left: 40,\n      top: 40,\n      bottom: 40\n    }\n\n    let width = this.props.w - margin.right - margin.left;\n    let height = this.props.h - margin.top - margin.bottom;\n\n    const xScale = d3.scaleTime()\n        .range([0, width])\n\n    const yScale = d3.scaleLinear()\n      .range([height, 0])\n\n    xScale.domain(d3.extent(this.props.data, d => d.Date ))\n\n    if (this.props.killedState === true) {\n      yScale.domain([0, d3.max(this.props.data, d => d.Killed)])\n    }\n    else {\n      yScale.domain([0, d3.max(this.props.data, d => d.Injured)])\n    }\n\n    d3.select(this.refs.bar).raise()\n\n    const rects = this.props.data.map((d, i) =>\n      <rect key={\"rect\"+ i}\n        x= { xScale(d.Date) }\n        y = { this.props.killedState === true ? yScale(d.Killed) : yScale(d.Injured) }\n        width = { 5 }\n        height = { this.props.killedState === true ? height - yScale(d.Killed) : height - yScale(d.Injured) }\n        style={{fill: this.props.killedState === true ? \"darkred\" : \"darkorange\",\n          opacity: this.props.extent[0] <= d.Date && this.props.extent[1] >= d.Date ? 1: 0,\n          stroke: this.props.hoverElement === d.Date ? \"black\" : \"none\",\n          strokeWidth: this.props.hoverElement === d.Date ? 2 : 1\n        }}\n        onMouseOver = { () => { this.props.onHover(d.Date) } }\n        onMouseOut = { () => { this.props.onHover(undefined) }}\n        className = {\"rects-data\"}\n        ref = {this.props.hoverElement === d.Date ? \"player\" : \"bar\" }\n        />)\n\n    // return e[0] <= d.date && e[1] >= d.date\n\n\n    return (\n      <svg ref = { node => this.node = node }  width = {this.props.w} height = {this.props.h} >\n      <g ref = {this.anchorRef} transform={\"translate(\" + margin.left + \",\" + margin.top + \")\"}>\n      { rects }\n     </g>\n     </svg>\n     )\n\n      }\n  }\n\n\nexport default BarChart;","// import data from './US_mass_shootings_2017.csv';\nimport us_states from './us.json'\nimport * as topojson from 'topojson';\nvar React = require(\"react\")\nvar d3 = require(\"d3\")\n\n\nclass MapChart extends React.Component{\n\n  state = {\n    us_states: [],\n  }\n\n  componentWillMount() {\n\n    d3.csv(\"./us.json\")\n    .then((json) => {\n      this.setState({\n        us_states\n      })\n    })\n    .catch(error => {\n    console.log(error)\n    });\n\n    // Promise.all([\n    //   d3.csv(us_states),\n    //   d3.csv(data)\n    //   ]).then(([json, data]) => {\n    //     this.setState({\n    //       us_states,\n    //       data\n    //     })\n    //   })\n\n  }\n\n  render() {\n\n   const margin = {\n      right: 40,\n      left: 40,\n      top: 40,\n      bottom: 40\n    }\n\n     const width = this.props.w - margin.right - margin.left;\n    const height = this.props.h - margin.top - margin.bottom;\n\n\n  const circleScale = d3.scaleSqrt()\n    .range([0,7])\n\n  const projection = d3.geoAlbersUsa()\n    .translate([width / 2, height / 2])\n    .scale(600)\n\n    if (this.props.killedState === true) {\n      circleScale.domain(d3.extent(this.props.data, d => d.Killed ))\n    }\n    else {\n      circleScale.domain(d3.extent(this.props.data, d => d.Injured ))\n    }\n\n\n  const path = d3.geoPath()\n    .projection(projection)\n\n    const { us_states } = this.state\n\n    if(us_states.objects === undefined) {\n      return null\n    }\n\n    const states = topojson.feature(us_states, us_states.objects.states).features\n\n    this.props.data.forEach((d) => {\n      d.coords = projection([d.Longitude, d.Latitude])\n    })\n\n\n    const states_map = states.map((d,i) => <path\n      key = { \"path\" + i }\n      d = { path(d) }\n      className = { \"state\" }\n      style = {{ fill: \"lightgrey\" }}\n      // attr = {{ stroke: \"grey\" }}\n      />)\n\n    const circles = this.props.data.map((d,i) => <circle\n      key = {\"circle\" + i}\n      r = { this.props.killedState === true ? circleScale(d.Killed) : circleScale(d.Injured) }\n      cx = { d.coords[0] }\n      cy = { d.coords[1] }\n      id = { d.State }\n      onMouseEnter = { () => { this.props.onHover(d.Date) } }\n      onMouseOut = { () => { this.props.onHover(undefined) }}\n      style={{\n        fill: this.props.killedState === true ? \"darkred\" : \"darkorange\",\n        stroke: this.props.hoverElement === d.Date ? \"black\" : \"none\",\n        strokeWidth: this.props.hoverElement === d.Date ? 2 : 1\n    }}\n\n      />)\n\n    return (\n      <svg width = {this.props.w} height = {this.props.h} >\n      <g transform={\"translate(\" + margin.left + \",\" + margin.top + \")\"}>\n      { states_map }\n      { circles }\n      </g>\n      </svg>\n\n     )\n\n      }\n  }\n\n\nexport default MapChart;","import './App.css';\nimport BarChart from \"./BarChart\"\nimport MapChart from \"./MapChart\"\nimport data from './US_mass_shootings.csv';\nimport BarStates from \"./BarStates\"\nvar React = require(\"react\")\nvar d3 = require(\"d3\")\n\n// var killedData = true;\n// var injuredData = false;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.onResize = this.onResize.bind(this)\n    this.onHover = this.onHover.bind(this)\n    this.onBrush = this.onBrush.bind(this)\n    this.killedClick = this.killedClick.bind(this)\n    this.injuredClick = this.injuredClick.bind(this)\n    this.event = { hover: \"none\" }\n  }\n\n    anchorRef = React.createRef()\n\n\n  killedClick() {\n    this.setState({\n      killedData: true,\n      injuredData: false\n    })\n  }\n\n  injuredClick() {\n    this.setState({\n      killedData: false,\n      injuredData: true\n    })\n  }\n\n   state = {\n    data: [],\n    screenWidth: window.innerWidth,\n    screenHeight: 500,\n  }\n\n  onHover(d) {\n    this.setState({\n      hover: d\n    })\n  }\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.onResize, false)\n\n    d3.csv(data)\n      .then(data => {\n        const date_array = [];\n        const parseTime = d3.timeParse(\"%d-%b-%y\")\n\n        data.forEach((d) => {\n          d.Date = parseTime(d.Date)\n          d.Year = +d.Year\n          d.Latitude = +d.Latitude\n          d.Longitude = +d.Longitude\n          d.Killed = +d.Killed\n          d.Injured = +d.Injured\n\n          date_array.push(d.Date)\n          })\n\n       var maxDate = new Date(Math.max.apply(null,date_array));\n       var minDate = new Date(Math.min.apply(null,date_array));\n\n        // Add Cleaned data to state\n        this.setState({\n          data,\n          brushExtent: [minDate,maxDate],\n          killedData: true,\n          injuredData: false\n\n        })\n\n      })\n\n  }\n\n\n  onResize() {\n    this.setState({\n      screenWidth: window.innerWidth,\n      screenHeight: 500\n    })\n  }\n\n  onBrush(d) {\n    this.setState({\n      brushExtent: d\n    })\n  }\n\n  render() {\n    const { data } = this.state\n\n    data.sort((a, b) => a.Killed - b.Killed)\n\n    d3.select(\".killedButton\")\n      .style(\"background-color\", () => {\n        if (this.state.killedData === true) return \"darkred\"\n        return \"lightgrey\"\n      })\n      .style(\"color\", () => {\n        if (this.state.killedData === true) return \"white\"\n        return \"black\"\n      })\n\n    d3.select(\".injuredButton\")\n      .style(\"background-color\", () => {\n        if (this.state.injuredData === true) return \"darkorange\"\n        return \"lightgrey\"\n      })\n      .style(\"color\", () => {\n        if (this.state.injuredData === true) return \"white\"\n        return \"black\"\n      })\n\n\n    // we only use this for the mapChart component. The barChart data changes only on opacity\n    const filterData = data.filter((d,i) => this.state.brushExtent[1] >= d.Date && d.Date >= this.state.brushExtent[0] )\n\n    return (\n      <div className=\"App\">\n      <h2 className = \"title\"> Mass Shootings in the United States</h2>\n      <div id = \"button-wrapper\">\n      <button className = \"killedButton\" onClick= {this.killedClick}> Killed </button>\n      <button className = \"injuredButton\" onClick= {this.injuredClick}> Injured </button>\n      </div>\n      <MapChart injuredState = {this.state.injuredData} killedState = {this.state.killedData} hoverElement={this.state.hover} onHover = { this.onHover } w = {this.state.screenWidth } h={this.state.screenHeight} data = { filterData } />\n      <BarChart injuredState = {this.state.injuredData} killedState = {this.state.killedData} extent ={this.state.brushExtent} changeBrush = {this.onBrush} hoverElement={this.state.hover} onHover ={ this.onHover } w= {this.state.screenWidth / 2.3 } h={this.state.screenHeight} data = { data } />\n      <BarStates injuredState = {this.state.injuredData} killedState = {this.state.killedData} onHover = { this.onHover } w = {this.state.screenWidth / 2.3} h = {this.state.screenHeight} data = {filterData} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}